version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    working_directory: ~/repo
    environment:
        NPM_CONFIG_PREFIX: ~/.npm-global

    steps:
        - checkout

        # Download and cache dependencies
        - restore_cache:
            keys:
            - v1-dependencies-{{ checksum "package.json" }}

        - run: 
            name: Installing Dependencies
            command: npm install 

        - save_cache:
            paths:
                - node_modules
            key: v1-dependencies-{{ checksum "package.json" }}
            
            # run tests!
        - run: mkdir junit
        - run:
            name: Lint
            command: npm run lint
        - run:
            name: Running Tests
            command: npx mocha --reporter mocha-junit-reporter
            environment:
                MOCHA_FILE: junit/test-results.xml
            when: always

        # get code coverage
        - run:
            name: Getting Code Coverage
            command: npx istanbul cover ./node_modules/mocha/bin/_mocha -- -R spec && npx codecov

        - run:
            name: Install Globally
            command: mkdir -p ~/.npm-global && npm link

        - run:
            name: Deploy Snapshot to Adobe I/O Runtime
            command: ~/.npm-global/bin/hlx build && ~/.npm-global/bin/hlx deploy --dirty --no-auto --wsk-namespace trieloff --wsk-auth $WSK_AUTH --loggly-host trieloff --loggly-auth $LOGGLY_AUTH
            working_directory: test/integration

        - store_test_results:
            path: junit
        - store_artifacts:
            path: junit 

  publish-snapshot:
    docker:
      # specify the version you desire here
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}

      - run: 
          name: Install Dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - run: 
          command: BUILD_TAG=$(./node_modules/.bin/npm-snapshot $CIRCLE_BUILD_NUM) echo 'export BUILD_TAG=$BUILD_TAG' >> $BASH_ENV

      - run: 
          name: Publish Snapshot
          command: npm publish --access public --tag next

      - run:
          name: Tag Release in Git
          command: git tag $(npm view @adobe/helix-cli@next version) && git push origin $(npm view @adobe/helix-cli@next version)

      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit 

workflows:
  version: 2
  build:
    jobs:
      - publish-snapshot:
           requires:
               - build
           filters:
              branches:
                only:
                  - master
      - build