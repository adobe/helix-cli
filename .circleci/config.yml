version: 2.1
executors:
  node18:
    docker:
      - image: cimg/node:18.15

orbs:
  win: circleci/windows@5.0.0
  codecov: codecov/codecov@3.2.4

commands:
  setup:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Installing Dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v4-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@project-helix.io" && git config --global user.name "CircleCi Build"

jobs:
  build_win:
    executor: win/default
    steps:
      - run: git config --global core.autocrlf false
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@project-helix.io"
      - run:
          name: prepare test git user
          command: git config --global user.name "CircleCi Build"
      - checkout
      - run:
          name: Install NVM
          command: choco install nvm -y
      - run:
          name: Install Node 16.16.0
          shell: bash.exe
          command: |
            nvm list
            nvm install 16.16.0
            nvm use 16.16.0
      - run:
          name: Verify Node Version
          shell: bash.exe
          command: node --version
      - run: mkdir junit
      - run:
          name: Installing Dependencies
          command: npm ci
      - run:
          name: Test and Code Coverage
          command: npm run test-ci-win
          environment:
            MOCHA_FILE: junit/test-results.xml
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit

  build:
    executor: node18
    working_directory: ~/repo
    steps:
      - setup
      - run: mkdir junit
      - run:
          name: prepare test git user
          command: git config --global user.email "you@example.com" && git config --global user.name "Your Name"
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test and Code Coverage
          command: npm run test
          environment:
            MOCHA_FILE: junit/test-results.xml
      - codecov/upload
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit

workflows:
  version: 2
  build:
    jobs:
      - build
      - build_win
