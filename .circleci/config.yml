version: 2.1
executors:
  node8:
    docker:
    # use latest node 8 on debian 8 (jessie)
    - image: circleci/node:8-jessie
    environment:
      NPM_CONFIG_PREFIX: ~/.npm-global

commands:
  setup:
    steps:
    - checkout
    - restore_cache:
        keys:
        - v4-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
    - run:
        name: install npm 6.4.1
        command: sudo npm -g install npm@6.4.1
    - run:
        name: Installing Dependencies
        command: npm install
    - save_cache:
        paths:
        - node_modules
        key: v4-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
    - run:
        name: prepare test git user
        command: git config --global user.email "circleci@project-helix.io" && git config --global user.name "CircleCi Build"

orbs:
  helix-smoke-tests: adobe/helix-smoke-tests@0.0.7

jobs:
  snyk:
    executor: node8
    working_directory: ~/repo

    steps:
    - setup

    - run:
        name: prepare test git user
        command: git config --global user.email "you@example.com" && git config --global user.name "Your Name"

    # test & get code coverage
    - run:
        name: Running Tests with Snyk Agent
        command: node snykmocha.js

  build:
    executor: node8
    working_directory: ~/repo

    steps:
    - setup

    # run tests!
    - run: mkdir junit
    - run:
        name: prepare test git user
        command: git config --global user.email "you@example.com" && git config --global user.name "Your Name"
    - run:
        name: Lint
        command: npm run lint

    # test & get code coverage
    - run:
        name: Test and Code Coverage
        command: npm run test-ci
        environment:
          MOCHA_FILE: junit/test-results.xml

    - store_test_results:
        path: junit

    - store_artifacts:
        path: junit

  publish-pre-release:
    executor: node8
    working_directory: ~/repo

    steps:
    - setup
    - run:
        name: revert changes to package-lock.json
        command: git checkout -- package-lock.json

    - run:
        name: configure npm registry
        command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

    - run:
        name: Semantic Release
        command: npm run semantic-release

workflows:
  version: 2
  build:
    jobs:
    # publish pre-releases on master
    - publish-pre-release:
        requires:
        - build
        filters:
          branches:
            only: master
    - build
    - snyk

  smoke:
    jobs:
    - helix-smoke-tests/run:
        token: ${SMOKE_TEST_TOKEN}
        remote_repo: adobe/helix-continuous
